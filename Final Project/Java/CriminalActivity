package com.example.personalbackground;

import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;

public class CriminalBackground extends AppCompatActivity {

    private CheckBox checkBoxAdminOffenseYes;
    private CheckBox checkBoxAdminOffenseNo;
    private EditText editTextAdminOffenseDetails;

    private CheckBox checkBoxCriminallyChargedYes;
    private CheckBox checkBoxCriminallyChargedNo;
    private EditText editTextCriminallyChargedDetails;

    private CheckBox checkBoxConvictedOfCrimeYes;
    private CheckBox checkBoxConvictedOfCrimeNo;
    private EditText editTextConvictedOfCrimeDetails;

    private CheckBox checkBoxIndigenousGroupYes;
    private CheckBox checkBoxIndigenousGroupNo;
    private EditText editTextIndigenousGroupDetails;

    private CheckBox checkBoxDisabilityGroupYes;
    private CheckBox checkBoxDisabilityGroupNo;
    private EditText editTextDisabilityGroupDetails;

    private CheckBox checkBoxSoloParentYes;
    private CheckBox checkBoxSoloParentNo;
    private EditText editTextSoloParentDetails;

    private Button submit;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_criminal_background);


        checkBoxAdminOffenseYes = findViewById(R.id.checkBoxAdminOffenseYes);
        checkBoxAdminOffenseNo = findViewById(R.id.checkBoxAdminOffenseNo);
        editTextAdminOffenseDetails = findViewById(R.id.editTextAdminOffenseDetails);

        checkBoxCriminallyChargedYes = findViewById(R.id.checkBoxCriminallyChargedYes);
        checkBoxCriminallyChargedNo = findViewById(R.id.checkBoxCriminallyChargedNo);
        editTextCriminallyChargedDetails = findViewById(R.id.editTextCriminallyChargedDetails);

        checkBoxConvictedOfCrimeYes = findViewById(R.id.checkBoxConvictedOfCrimeYes);
        checkBoxConvictedOfCrimeNo = findViewById(R.id.checkBoxConvictedOfCrimeNo);
        editTextConvictedOfCrimeDetails = findViewById(R.id.editTextConvictedOfCrimeDetails);

        checkBoxIndigenousGroupYes = findViewById(R.id.checkBoxIndigenousGroupYes);
        checkBoxIndigenousGroupNo = findViewById(R.id.checkBoxIndigenousGroupNo);
        editTextIndigenousGroupDetails = findViewById(R.id.editTextIndigenousGroupDetails);

        checkBoxDisabilityGroupYes = findViewById(R.id.checkBoxDisabilityGroupYes);
        checkBoxDisabilityGroupNo = findViewById(R.id.checkBoxDisabilityGroupNo);
        editTextDisabilityGroupDetails = findViewById(R.id.editTextDisabilityGroupDetails);

        checkBoxSoloParentYes = findViewById(R.id.checkBoxSoloParentYes);
        checkBoxSoloParentNo = findViewById(R.id.checkBoxSoloParentNo);
        editTextSoloParentDetails = findViewById(R.id.editTextSoloParentDetails);

        submit = findViewById(R.id.submit);
        submit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
//                submitForm();
                sendNotif();
            }
        });

        // Enable/disable details EditText based on checkbox state
        checkBoxAdminOffenseYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextAdminOffenseDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextAdminOffenseDetails.setText("");
            }
        });

        checkBoxCriminallyChargedYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextCriminallyChargedDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextCriminallyChargedDetails.setText("");
            }
        });

        checkBoxConvictedOfCrimeYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextConvictedOfCrimeDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextConvictedOfCrimeDetails.setText("");
            }
        });

        checkBoxIndigenousGroupYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextIndigenousGroupDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextIndigenousGroupDetails.setText("");
            }
        });

        checkBoxDisabilityGroupYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextDisabilityGroupDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextDisabilityGroupDetails.setText("");
            }
        });

        checkBoxSoloParentYes.setOnCheckedChangeListener((buttonView, isChecked) -> {
            editTextSoloParentDetails.setEnabled(isChecked);
            if (!isChecked) {
                editTextSoloParentDetails.setText("");
            }
        });
    }


//    private void submitForm() {
//
//
//
//    }
    private void sendNotif(){
        // Retrieve the selected checkbox values and details
        boolean adminOffenseChecked = checkBoxAdminOffenseYes.isChecked();
        boolean criminallyChargedChecked = checkBoxCriminallyChargedYes.isChecked();
        boolean convictedOfCrimeChecked = checkBoxConvictedOfCrimeYes.isChecked();
        boolean indigenousGroupChecked = checkBoxIndigenousGroupYes.isChecked();
        boolean disabilityGroupChecked = checkBoxDisabilityGroupYes.isChecked();
        boolean soloParentChecked = checkBoxSoloParentYes.isChecked();

        boolean adminOffenseNotChecked = checkBoxAdminOffenseNo.isChecked();
        boolean criminallyChargedNotChecked = checkBoxCriminallyChargedNo.isChecked();
        boolean convictedOfCrimeNotChecked = checkBoxConvictedOfCrimeNo.isChecked();
        boolean indigenousGroupNotChecked = checkBoxIndigenousGroupNo.isChecked();
        boolean disabilityGroupNotChecked = checkBoxDisabilityGroupNo.isChecked();
        boolean soloParentNotChecked = checkBoxSoloParentNo.isChecked();

        String adminOffenseDetails = editTextAdminOffenseDetails.getText().toString().trim();
        String criminallyChargedDetails = editTextCriminallyChargedDetails.getText().toString().trim();
        String convictedOfCrimeDetails = editTextConvictedOfCrimeDetails.getText().toString().trim();
        String indigenousGroupDetails = editTextIndigenousGroupDetails.getText().toString().trim();
        String disabilityGroupDetails = editTextDisabilityGroupDetails.getText().toString().trim();
        String soloParentDetails = editTextSoloParentDetails.getText().toString().trim();

        if(adminOffenseChecked){
            editTextAdminOffenseDetails.setEnabled(true);
        }else{
            editTextAdminOffenseDetails.setEnabled(false);
        }
        if(criminallyChargedChecked){
            editTextCriminallyChargedDetails.setEnabled(true);
        }else{
            editTextCriminallyChargedDetails.setEnabled(false);
        }
        if(convictedOfCrimeChecked){
            editTextConvictedOfCrimeDetails.setEnabled(true);
        }else{
            editTextConvictedOfCrimeDetails.setEnabled(false);
        }
        if(indigenousGroupChecked){
            editTextIndigenousGroupDetails.setEnabled(true);
        }else{
            editTextIndigenousGroupDetails.setEnabled(false);
        }
        if(disabilityGroupChecked){
            editTextDisabilityGroupDetails.setEnabled(true);
        }else{
            editTextDisabilityGroupDetails.setEnabled(false);
        }
        if(soloParentChecked){
            editTextDisabilityGroupDetails.setEnabled(true);
        }else{
            editTextSoloParentDetails.setEnabled(false);
        }





        if (adminOffenseChecked || criminallyChargedChecked || convictedOfCrimeChecked || indigenousGroupChecked ||
                disabilityGroupChecked || soloParentChecked || !criminallyChargedNotChecked || !adminOffenseNotChecked || !convictedOfCrimeNotChecked ||
                !indigenousGroupNotChecked || !disabilityGroupNotChecked || !soloParentNotChecked){
            if(adminOffenseDetails.isEmpty() && criminallyChargedDetails.isEmpty() && convictedOfCrimeDetails.isEmpty()
                    && indigenousGroupDetails.isEmpty() && disabilityGroupDetails.isEmpty() && soloParentDetails.isEmpty()){
                Toast.makeText(this, "Please fill in all necessary information", Toast.LENGTH_SHORT).show();
            }
        }else {
            NotificationCompat.Builder builder = new NotificationCompat.Builder(this);
            builder.setContentTitle("You have a new notification");
            builder.setContentText("Criminal Record");
            builder.setSmallIcon(R.drawable.baseline_airplanemode_active_24);

            NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
            nm.notify(0, builder.build());
        }

    }
}
